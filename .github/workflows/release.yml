name: Release Workflow

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js (for semantic-release)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install dependencies without requiring package-lock.json
      - name: Install dependencies
        run: |
          npm install --no-package-lock

      # Run semantic-release to determine version and create release
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      # Update FILETOOLS_VERSION in env-template
      - name: Update FILETOOLS_VERSION in env-template
        run: |
          # Parse the new version
          NEW_VERSION=$(npx semantic-release --dry-run | grep 'nextRelease.version' | cut -d '"' -f4 || echo "")
          if [ -z "$NEW_VERSION" ]; then
            echo "Error: Failed to parse nextRelease.version from semantic-release output"
            exit 1
          fi
          sed -i "s/^FILETOOLS_VERSION=.*/FILETOOLS_VERSION=${NEW_VERSION}/" deployment/lxc/env-template

      # Commit the updated env-template
      - name: Commit updated env-template
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add deployment/lxc/env-template
          git commit -m "ci: update FILETOOLS_VERSION to ${NEW_VERSION}"
          git pull --rebase origin main || true
          git push origin main || {
            echo "Push failed. Retrying..."
            git pull --rebase origin main
            git push origin main
          }
